/*
 * PaypalMergedAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.paypal.sandbox.apim.models.containers;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fasterxml.jackson.core.JsonParser;
import com.fasterxml.jackson.core.JsonProcessingException;
import com.fasterxml.jackson.core.ObjectCodec;
import com.fasterxml.jackson.databind.DeserializationContext;
import com.fasterxml.jackson.databind.JsonDeserializer;
import com.fasterxml.jackson.databind.JsonNode;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.paypal.sandbox.apim.ApiHelper;
import com.paypal.sandbox.apim.models.INVALIDSTRINGMAXLENGTH;
import com.paypal.sandbox.apim.models.InvalidParameterSyntaxError;
import com.paypal.sandbox.apim.models.InvalidParameterValueError;
import com.paypal.sandbox.apim.models.InvalidStringLengthError;
import com.paypal.sandbox.apim.models.MALFORMEDREQUESTJSONERROR;
import com.paypal.sandbox.apim.models.MissingRequiredParameterError;
import io.apimatic.core.annotations.TypeCombinator.TypeCombinatorCase;
import java.io.IOException;
import java.util.Arrays;

/**
 * This is a container class for any-of types.
 */
@JsonDeserialize(using = OrdersConfirm400IssuesItems.OrdersConfirm400IssuesItemsDeserializer.class)
public abstract class OrdersConfirm400IssuesItems {
    
    /**
     * This is Invalid Parameter Syntax Error case.
     * @param invalidParameterSyntaxError InvalidParameterSyntaxError value for invalidParameterSyntaxError.
     * @return The InvalidParameterSyntaxErrorCase object.
     */
    public static OrdersConfirm400IssuesItems fromInvalidParameterSyntaxError(
            InvalidParameterSyntaxError invalidParameterSyntaxError) {
        return invalidParameterSyntaxError == null ? null : new InvalidParameterSyntaxErrorCase(invalidParameterSyntaxError);
    }

    /**
     * This is Invalid Parameter Value Error case.
     * @param invalidParameterValueError InvalidParameterValueError value for invalidParameterValueError.
     * @return The InvalidParameterValueErrorCase object.
     */
    public static OrdersConfirm400IssuesItems fromInvalidParameterValueError(
            InvalidParameterValueError invalidParameterValueError) {
        return invalidParameterValueError == null ? null : new InvalidParameterValueErrorCase(invalidParameterValueError);
    }

    /**
     * This is Missing Required Parameter Error case.
     * @param missingRequiredParameterError MissingRequiredParameterError value for missingRequiredParameterError.
     * @return The MissingRequiredParameterErrorCase object.
     */
    public static OrdersConfirm400IssuesItems fromMissingRequiredParameterError(
            MissingRequiredParameterError missingRequiredParameterError) {
        return missingRequiredParameterError == null ? null : new MissingRequiredParameterErrorCase(missingRequiredParameterError);
    }

    /**
     * This is Invalid String Length Error case.
     * @param invalidStringLengthError InvalidStringLengthError value for invalidStringLengthError.
     * @return The InvalidStringLengthErrorCase object.
     */
    public static OrdersConfirm400IssuesItems fromInvalidStringLengthError(
            InvalidStringLengthError invalidStringLengthError) {
        return invalidStringLengthError == null ? null : new InvalidStringLengthErrorCase(invalidStringLengthError);
    }

    /**
     * This is INVALID_STRING_MAX_LENGTH case.
     * @param iNVALIDSTRINGMAXLENGTH INVALIDSTRINGMAXLENGTH value for iNVALIDSTRINGMAXLENGTH.
     * @return The INVALIDSTRINGMAXLENGTHCase object.
     */
    public static OrdersConfirm400IssuesItems fromINVALIDSTRINGMAXLENGTH(
            INVALIDSTRINGMAXLENGTH iNVALIDSTRINGMAXLENGTH) {
        return iNVALIDSTRINGMAXLENGTH == null ? null : new INVALIDSTRINGMAXLENGTHCase(iNVALIDSTRINGMAXLENGTH);
    }

    /**
     * This is MALFORMED_REQUEST_JSON_ERROR case.
     * @param mALFORMEDREQUESTJSONERROR MALFORMEDREQUESTJSONERROR value for mALFORMEDREQUESTJSONERROR.
     * @return The MALFORMEDREQUESTJSONERRORCase object.
     */
    public static OrdersConfirm400IssuesItems fromMALFORMEDREQUESTJSONERROR(
            MALFORMEDREQUESTJSONERROR mALFORMEDREQUESTJSONERROR) {
        return mALFORMEDREQUESTJSONERROR == null ? null : new MALFORMEDREQUESTJSONERRORCase(mALFORMEDREQUESTJSONERROR);
    }

    /**
     * Method to match from the provided any-of cases.
     * @param <R> The type to return after applying callback.
     * @param cases The any-of type cases callback.
     * @return The any-of matched case.
     */
    public abstract <R> R match(Cases<R> cases);

    /**
     * This is interface for any-of cases.
     * @param <R> The type to return after applying callback.
     */
    public interface Cases<R> {
        R invalidParameterSyntaxError(InvalidParameterSyntaxError invalidParameterSyntaxError);

        R invalidParameterValueError(InvalidParameterValueError invalidParameterValueError);

        R missingRequiredParameterError(MissingRequiredParameterError missingRequiredParameterError);

        R invalidStringLengthError(InvalidStringLengthError invalidStringLengthError);

        R iNVALIDSTRINGMAXLENGTH(INVALIDSTRINGMAXLENGTH iNVALIDSTRINGMAXLENGTH);

        R mALFORMEDREQUESTJSONERROR(MALFORMEDREQUESTJSONERROR mALFORMEDREQUESTJSONERROR);
    }

    /**
     * This is a implementation class for InvalidParameterSyntaxErrorCase.
     */
    @JsonDeserialize(using = JsonDeserializer.None.class)
    @TypeCombinatorCase(type = "InvalidParameterSyntaxError")
    private static class InvalidParameterSyntaxErrorCase extends OrdersConfirm400IssuesItems {

        @JsonValue
        private InvalidParameterSyntaxError invalidParameterSyntaxError;

        InvalidParameterSyntaxErrorCase(InvalidParameterSyntaxError invalidParameterSyntaxError) {
            this.invalidParameterSyntaxError = invalidParameterSyntaxError;
        }

        @Override
        public <R> R match(Cases<R> cases) {
            return cases.invalidParameterSyntaxError(this.invalidParameterSyntaxError);
        }

        @JsonCreator
        private InvalidParameterSyntaxErrorCase(JsonNode jsonNode) throws IOException {
            this.invalidParameterSyntaxError = ApiHelper.deserialize(jsonNode,
                InvalidParameterSyntaxError.class);
        }

        @Override
        public String toString() {
            return invalidParameterSyntaxError.toString();
        }
    }

    /**
     * This is a implementation class for InvalidParameterValueErrorCase.
     */
    @JsonDeserialize(using = JsonDeserializer.None.class)
    @TypeCombinatorCase(type = "InvalidParameterValueError")
    private static class InvalidParameterValueErrorCase extends OrdersConfirm400IssuesItems {

        @JsonValue
        private InvalidParameterValueError invalidParameterValueError;

        InvalidParameterValueErrorCase(InvalidParameterValueError invalidParameterValueError) {
            this.invalidParameterValueError = invalidParameterValueError;
        }

        @Override
        public <R> R match(Cases<R> cases) {
            return cases.invalidParameterValueError(this.invalidParameterValueError);
        }

        @JsonCreator
        private InvalidParameterValueErrorCase(JsonNode jsonNode) throws IOException {
            this.invalidParameterValueError = ApiHelper.deserialize(jsonNode,
                InvalidParameterValueError.class);
        }

        @Override
        public String toString() {
            return invalidParameterValueError.toString();
        }
    }

    /**
     * This is a implementation class for MissingRequiredParameterErrorCase.
     */
    @JsonDeserialize(using = JsonDeserializer.None.class)
    @TypeCombinatorCase(type = "MissingRequiredParameterError")
    private static class MissingRequiredParameterErrorCase extends OrdersConfirm400IssuesItems {

        @JsonValue
        private MissingRequiredParameterError missingRequiredParameterError;

        MissingRequiredParameterErrorCase(MissingRequiredParameterError missingRequiredParameterError) {
            this.missingRequiredParameterError = missingRequiredParameterError;
        }

        @Override
        public <R> R match(Cases<R> cases) {
            return cases.missingRequiredParameterError(this.missingRequiredParameterError);
        }

        @JsonCreator
        private MissingRequiredParameterErrorCase(JsonNode jsonNode) throws IOException {
            this.missingRequiredParameterError = ApiHelper.deserialize(jsonNode,
                MissingRequiredParameterError.class);
        }

        @Override
        public String toString() {
            return missingRequiredParameterError.toString();
        }
    }

    /**
     * This is a implementation class for InvalidStringLengthErrorCase.
     */
    @JsonDeserialize(using = JsonDeserializer.None.class)
    @TypeCombinatorCase(type = "InvalidStringLengthError")
    private static class InvalidStringLengthErrorCase extends OrdersConfirm400IssuesItems {

        @JsonValue
        private InvalidStringLengthError invalidStringLengthError;

        InvalidStringLengthErrorCase(InvalidStringLengthError invalidStringLengthError) {
            this.invalidStringLengthError = invalidStringLengthError;
        }

        @Override
        public <R> R match(Cases<R> cases) {
            return cases.invalidStringLengthError(this.invalidStringLengthError);
        }

        @JsonCreator
        private InvalidStringLengthErrorCase(JsonNode jsonNode) throws IOException {
            this.invalidStringLengthError = ApiHelper.deserialize(jsonNode,
                InvalidStringLengthError.class);
        }

        @Override
        public String toString() {
            return invalidStringLengthError.toString();
        }
    }

    /**
     * This is a implementation class for INVALIDSTRINGMAXLENGTHCase.
     */
    @JsonDeserialize(using = JsonDeserializer.None.class)
    @TypeCombinatorCase(type = "INVALIDSTRINGMAXLENGTH")
    private static class INVALIDSTRINGMAXLENGTHCase extends OrdersConfirm400IssuesItems {

        @JsonValue
        private INVALIDSTRINGMAXLENGTH iNVALIDSTRINGMAXLENGTH;

        INVALIDSTRINGMAXLENGTHCase(INVALIDSTRINGMAXLENGTH iNVALIDSTRINGMAXLENGTH) {
            this.iNVALIDSTRINGMAXLENGTH = iNVALIDSTRINGMAXLENGTH;
        }

        @Override
        public <R> R match(Cases<R> cases) {
            return cases.iNVALIDSTRINGMAXLENGTH(this.iNVALIDSTRINGMAXLENGTH);
        }

        @JsonCreator
        private INVALIDSTRINGMAXLENGTHCase(JsonNode jsonNode) throws IOException {
            this.iNVALIDSTRINGMAXLENGTH = ApiHelper.deserialize(jsonNode,
                INVALIDSTRINGMAXLENGTH.class);
        }

        @Override
        public String toString() {
            return iNVALIDSTRINGMAXLENGTH.toString();
        }
    }

    /**
     * This is a implementation class for MALFORMEDREQUESTJSONERRORCase.
     */
    @JsonDeserialize(using = JsonDeserializer.None.class)
    @TypeCombinatorCase(type = "MALFORMEDREQUESTJSONERROR")
    private static class MALFORMEDREQUESTJSONERRORCase extends OrdersConfirm400IssuesItems {

        @JsonValue
        private MALFORMEDREQUESTJSONERROR mALFORMEDREQUESTJSONERROR;

        MALFORMEDREQUESTJSONERRORCase(MALFORMEDREQUESTJSONERROR mALFORMEDREQUESTJSONERROR) {
            this.mALFORMEDREQUESTJSONERROR = mALFORMEDREQUESTJSONERROR;
        }

        @Override
        public <R> R match(Cases<R> cases) {
            return cases.mALFORMEDREQUESTJSONERROR(this.mALFORMEDREQUESTJSONERROR);
        }

        @JsonCreator
        private MALFORMEDREQUESTJSONERRORCase(JsonNode jsonNode) throws IOException {
            this.mALFORMEDREQUESTJSONERROR = ApiHelper.deserialize(jsonNode,
                MALFORMEDREQUESTJSONERROR.class);
        }

        @Override
        public String toString() {
            return mALFORMEDREQUESTJSONERROR.toString();
        }
    }

    /**
     * This is a custom deserializer class for OrdersConfirm400IssuesItems.
     */
    protected static class OrdersConfirm400IssuesItemsDeserializer
            extends JsonDeserializer<OrdersConfirm400IssuesItems> {

        @Override
        public OrdersConfirm400IssuesItems deserialize(JsonParser jp, DeserializationContext ctxt)
                throws IOException, JsonProcessingException {
            ObjectCodec oc = jp.getCodec();
            JsonNode node = oc.readTree(jp);
            return ApiHelper.deserialize(node, Arrays.asList(InvalidParameterSyntaxErrorCase.class,
                    InvalidParameterValueErrorCase.class, MissingRequiredParameterErrorCase.class,
                    InvalidStringLengthErrorCase.class, INVALIDSTRINGMAXLENGTHCase.class,
                    MALFORMEDREQUESTJSONERRORCase.class), false);
        }
    }

}
