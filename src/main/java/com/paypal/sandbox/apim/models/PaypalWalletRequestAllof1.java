/*
 * PaypalMergedAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.paypal.sandbox.apim.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;

/**
 * This is a model class for PaypalWalletRequestAllof1 type.
 */
public class PaypalWalletRequestAllof1 {
    private ExperienceContext1 experienceContext;

    /**
     * Default constructor.
     */
    public PaypalWalletRequestAllof1() {
    }

    /**
     * Initialization constructor.
     * @param  experienceContext  ExperienceContext1 value for experienceContext.
     */
    public PaypalWalletRequestAllof1(
            ExperienceContext1 experienceContext) {
        this.experienceContext = experienceContext;
    }

    /**
     * Getter for ExperienceContext.
     * Customizes the Vault creation flow experience for your customers.
     * @return Returns the ExperienceContext1
     */
    @JsonGetter("experience_context")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public ExperienceContext1 getExperienceContext() {
        return experienceContext;
    }

    /**
     * Setter for ExperienceContext.
     * Customizes the Vault creation flow experience for your customers.
     * @param experienceContext Value for ExperienceContext1
     */
    @JsonSetter("experience_context")
    public void setExperienceContext(ExperienceContext1 experienceContext) {
        this.experienceContext = experienceContext;
    }

    /**
     * Converts this PaypalWalletRequestAllof1 into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "PaypalWalletRequestAllof1 [" + "experienceContext=" + experienceContext + "]";
    }

    /**
     * Builds a new {@link PaypalWalletRequestAllof1.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link PaypalWalletRequestAllof1.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder()
                .experienceContext(getExperienceContext());
        return builder;
    }

    /**
     * Class to build instances of {@link PaypalWalletRequestAllof1}.
     */
    public static class Builder {
        private ExperienceContext1 experienceContext;



        /**
         * Setter for experienceContext.
         * @param  experienceContext  ExperienceContext1 value for experienceContext.
         * @return Builder
         */
        public Builder experienceContext(ExperienceContext1 experienceContext) {
            this.experienceContext = experienceContext;
            return this;
        }

        /**
         * Builds a new {@link PaypalWalletRequestAllof1} object using the set fields.
         * @return {@link PaypalWalletRequestAllof1}
         */
        public PaypalWalletRequestAllof1 build() {
            return new PaypalWalletRequestAllof1(experienceContext);
        }
    }
}
