/*
 * PaypalMergedAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.paypal.sandbox.apim.models.containers;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fasterxml.jackson.core.JsonParser;
import com.fasterxml.jackson.core.JsonProcessingException;
import com.fasterxml.jackson.core.ObjectCodec;
import com.fasterxml.jackson.databind.DeserializationContext;
import com.fasterxml.jackson.databind.JsonDeserializer;
import com.fasterxml.jackson.databind.JsonNode;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.paypal.sandbox.apim.ApiHelper;
import com.paypal.sandbox.apim.models.AMOUNTNOTPATCHABLE;
import com.paypal.sandbox.apim.models.FIELDNOTPATCHABLE;
import com.paypal.sandbox.apim.models.INVALIDPATCHOPERATION;
import com.paypal.sandbox.apim.models.INvalidParameterSyntax1;
import com.paypal.sandbox.apim.models.InvalidArrayMaximumItems;
import com.paypal.sandbox.apim.models.InvalidParameterValue1;
import com.paypal.sandbox.apim.models.InvalidStringLength1;
import com.paypal.sandbox.apim.models.MalformedRequestJson1;
import com.paypal.sandbox.apim.models.MissingRequiredParameter1;
import io.apimatic.core.annotations.TypeCombinator.TypeCombinatorCase;
import java.io.IOException;
import java.util.Arrays;

/**
 * This is a container class for any-of types.
 */
@JsonDeserialize(using = OrdersPatch400IssuesItems.OrdersPatch400IssuesItemsDeserializer.class)
public abstract class OrdersPatch400IssuesItems {
    
    /**
     * This is FIELD_NOT_PATCHABLE case.
     * @param fIELDNOTPATCHABLE FIELDNOTPATCHABLE value for fIELDNOTPATCHABLE.
     * @return The FIELDNOTPATCHABLECase object.
     */
    public static OrdersPatch400IssuesItems fromFIELDNOTPATCHABLE(
            FIELDNOTPATCHABLE fIELDNOTPATCHABLE) {
        return fIELDNOTPATCHABLE == null ? null : new FIELDNOTPATCHABLECase(fIELDNOTPATCHABLE);
    }

    /**
     * This is Invalid Array Maximum Items case.
     * @param invalidArrayMaximumItems InvalidArrayMaximumItems value for invalidArrayMaximumItems.
     * @return The InvalidArrayMaximumItemsCase object.
     */
    public static OrdersPatch400IssuesItems fromInvalidArrayMaximumItems(
            InvalidArrayMaximumItems invalidArrayMaximumItems) {
        return invalidArrayMaximumItems == null ? null : new InvalidArrayMaximumItemsCase(invalidArrayMaximumItems);
    }

    /**
     * This is INvalid Parameter Syntax1 case.
     * @param iNvalidParameterSyntax1 INvalidParameterSyntax1 value for iNvalidParameterSyntax1.
     * @return The INvalidParameterSyntax1Case object.
     */
    public static OrdersPatch400IssuesItems fromINvalidParameterSyntax1(
            INvalidParameterSyntax1 iNvalidParameterSyntax1) {
        return iNvalidParameterSyntax1 == null ? null : new INvalidParameterSyntax1Case(iNvalidParameterSyntax1);
    }

    /**
     * This is Invalid String Length1 case.
     * @param invalidStringLength1 InvalidStringLength1 value for invalidStringLength1.
     * @return The InvalidStringLength1Case object.
     */
    public static OrdersPatch400IssuesItems fromInvalidStringLength1(
            InvalidStringLength1 invalidStringLength1) {
        return invalidStringLength1 == null ? null : new InvalidStringLength1Case(invalidStringLength1);
    }

    /**
     * This is Invalid Parameter Value1 case.
     * @param invalidParameterValue1 InvalidParameterValue1 value for invalidParameterValue1.
     * @return The InvalidParameterValue1Case object.
     */
    public static OrdersPatch400IssuesItems fromInvalidParameterValue1(
            InvalidParameterValue1 invalidParameterValue1) {
        return invalidParameterValue1 == null ? null : new InvalidParameterValue1Case(invalidParameterValue1);
    }

    /**
     * This is Missing Required Parameter1 case.
     * @param missingRequiredParameter1 MissingRequiredParameter1 value for missingRequiredParameter1.
     * @return The MissingRequiredParameter1Case object.
     */
    public static OrdersPatch400IssuesItems fromMissingRequiredParameter1(
            MissingRequiredParameter1 missingRequiredParameter1) {
        return missingRequiredParameter1 == null ? null : new MissingRequiredParameter1Case(missingRequiredParameter1);
    }

    /**
     * This is AMOUNT_NOT_PATCHABLE case.
     * @param aMOUNTNOTPATCHABLE AMOUNTNOTPATCHABLE value for aMOUNTNOTPATCHABLE.
     * @return The AMOUNTNOTPATCHABLECase object.
     */
    public static OrdersPatch400IssuesItems fromAMOUNTNOTPATCHABLE(
            AMOUNTNOTPATCHABLE aMOUNTNOTPATCHABLE) {
        return aMOUNTNOTPATCHABLE == null ? null : new AMOUNTNOTPATCHABLECase(aMOUNTNOTPATCHABLE);
    }

    /**
     * This is INVALID_PATCH_OPERATION case.
     * @param iNVALIDPATCHOPERATION INVALIDPATCHOPERATION value for iNVALIDPATCHOPERATION.
     * @return The INVALIDPATCHOPERATIONCase object.
     */
    public static OrdersPatch400IssuesItems fromINVALIDPATCHOPERATION(
            INVALIDPATCHOPERATION iNVALIDPATCHOPERATION) {
        return iNVALIDPATCHOPERATION == null ? null : new INVALIDPATCHOPERATIONCase(iNVALIDPATCHOPERATION);
    }

    /**
     * This is Malformed request json1 case.
     * @param malformedRequestJson1 MalformedRequestJson1 value for malformedRequestJson1.
     * @return The MalformedRequestJson1Case object.
     */
    public static OrdersPatch400IssuesItems fromMalformedRequestJson1(
            MalformedRequestJson1 malformedRequestJson1) {
        return malformedRequestJson1 == null ? null : new MalformedRequestJson1Case(malformedRequestJson1);
    }

    /**
     * Method to match from the provided any-of cases.
     * @param <R> The type to return after applying callback.
     * @param cases The any-of type cases callback.
     * @return The any-of matched case.
     */
    public abstract <R> R match(Cases<R> cases);

    /**
     * This is interface for any-of cases.
     * @param <R> The type to return after applying callback.
     */
    public interface Cases<R> {
        R fIELDNOTPATCHABLE(FIELDNOTPATCHABLE fIELDNOTPATCHABLE);

        R invalidArrayMaximumItems(InvalidArrayMaximumItems invalidArrayMaximumItems);

        R iNvalidParameterSyntax1(INvalidParameterSyntax1 iNvalidParameterSyntax1);

        R invalidStringLength1(InvalidStringLength1 invalidStringLength1);

        R invalidParameterValue1(InvalidParameterValue1 invalidParameterValue1);

        R missingRequiredParameter1(MissingRequiredParameter1 missingRequiredParameter1);

        R aMOUNTNOTPATCHABLE(AMOUNTNOTPATCHABLE aMOUNTNOTPATCHABLE);

        R iNVALIDPATCHOPERATION(INVALIDPATCHOPERATION iNVALIDPATCHOPERATION);

        R malformedRequestJson1(MalformedRequestJson1 malformedRequestJson1);
    }

    /**
     * This is a implementation class for FIELDNOTPATCHABLECase.
     */
    @JsonDeserialize(using = JsonDeserializer.None.class)
    @TypeCombinatorCase(type = "FIELDNOTPATCHABLE")
    private static class FIELDNOTPATCHABLECase extends OrdersPatch400IssuesItems {

        @JsonValue
        private FIELDNOTPATCHABLE fIELDNOTPATCHABLE;

        FIELDNOTPATCHABLECase(FIELDNOTPATCHABLE fIELDNOTPATCHABLE) {
            this.fIELDNOTPATCHABLE = fIELDNOTPATCHABLE;
        }

        @Override
        public <R> R match(Cases<R> cases) {
            return cases.fIELDNOTPATCHABLE(this.fIELDNOTPATCHABLE);
        }

        @JsonCreator
        private FIELDNOTPATCHABLECase(JsonNode jsonNode) throws IOException {
            this.fIELDNOTPATCHABLE = ApiHelper.deserialize(jsonNode,
                FIELDNOTPATCHABLE.class);
        }

        @Override
        public String toString() {
            return fIELDNOTPATCHABLE.toString();
        }
    }

    /**
     * This is a implementation class for InvalidArrayMaximumItemsCase.
     */
    @JsonDeserialize(using = JsonDeserializer.None.class)
    @TypeCombinatorCase(type = "InvalidArrayMaximumItems")
    private static class InvalidArrayMaximumItemsCase extends OrdersPatch400IssuesItems {

        @JsonValue
        private InvalidArrayMaximumItems invalidArrayMaximumItems;

        InvalidArrayMaximumItemsCase(InvalidArrayMaximumItems invalidArrayMaximumItems) {
            this.invalidArrayMaximumItems = invalidArrayMaximumItems;
        }

        @Override
        public <R> R match(Cases<R> cases) {
            return cases.invalidArrayMaximumItems(this.invalidArrayMaximumItems);
        }

        @JsonCreator
        private InvalidArrayMaximumItemsCase(JsonNode jsonNode) throws IOException {
            this.invalidArrayMaximumItems = ApiHelper.deserialize(jsonNode,
                InvalidArrayMaximumItems.class);
        }

        @Override
        public String toString() {
            return invalidArrayMaximumItems.toString();
        }
    }

    /**
     * This is a implementation class for INvalidParameterSyntax1Case.
     */
    @JsonDeserialize(using = JsonDeserializer.None.class)
    @TypeCombinatorCase(type = "INvalidParameterSyntax1")
    private static class INvalidParameterSyntax1Case extends OrdersPatch400IssuesItems {

        @JsonValue
        private INvalidParameterSyntax1 iNvalidParameterSyntax1;

        INvalidParameterSyntax1Case(INvalidParameterSyntax1 iNvalidParameterSyntax1) {
            this.iNvalidParameterSyntax1 = iNvalidParameterSyntax1;
        }

        @Override
        public <R> R match(Cases<R> cases) {
            return cases.iNvalidParameterSyntax1(this.iNvalidParameterSyntax1);
        }

        @JsonCreator
        private INvalidParameterSyntax1Case(JsonNode jsonNode) throws IOException {
            this.iNvalidParameterSyntax1 = ApiHelper.deserialize(jsonNode,
                INvalidParameterSyntax1.class);
        }

        @Override
        public String toString() {
            return iNvalidParameterSyntax1.toString();
        }
    }

    /**
     * This is a implementation class for InvalidStringLength1Case.
     */
    @JsonDeserialize(using = JsonDeserializer.None.class)
    @TypeCombinatorCase(type = "InvalidStringLength1")
    private static class InvalidStringLength1Case extends OrdersPatch400IssuesItems {

        @JsonValue
        private InvalidStringLength1 invalidStringLength1;

        InvalidStringLength1Case(InvalidStringLength1 invalidStringLength1) {
            this.invalidStringLength1 = invalidStringLength1;
        }

        @Override
        public <R> R match(Cases<R> cases) {
            return cases.invalidStringLength1(this.invalidStringLength1);
        }

        @JsonCreator
        private InvalidStringLength1Case(JsonNode jsonNode) throws IOException {
            this.invalidStringLength1 = ApiHelper.deserialize(jsonNode,
                InvalidStringLength1.class);
        }

        @Override
        public String toString() {
            return invalidStringLength1.toString();
        }
    }

    /**
     * This is a implementation class for InvalidParameterValue1Case.
     */
    @JsonDeserialize(using = JsonDeserializer.None.class)
    @TypeCombinatorCase(type = "InvalidParameterValue1")
    private static class InvalidParameterValue1Case extends OrdersPatch400IssuesItems {

        @JsonValue
        private InvalidParameterValue1 invalidParameterValue1;

        InvalidParameterValue1Case(InvalidParameterValue1 invalidParameterValue1) {
            this.invalidParameterValue1 = invalidParameterValue1;
        }

        @Override
        public <R> R match(Cases<R> cases) {
            return cases.invalidParameterValue1(this.invalidParameterValue1);
        }

        @JsonCreator
        private InvalidParameterValue1Case(JsonNode jsonNode) throws IOException {
            this.invalidParameterValue1 = ApiHelper.deserialize(jsonNode,
                InvalidParameterValue1.class);
        }

        @Override
        public String toString() {
            return invalidParameterValue1.toString();
        }
    }

    /**
     * This is a implementation class for MissingRequiredParameter1Case.
     */
    @JsonDeserialize(using = JsonDeserializer.None.class)
    @TypeCombinatorCase(type = "MissingRequiredParameter1")
    private static class MissingRequiredParameter1Case extends OrdersPatch400IssuesItems {

        @JsonValue
        private MissingRequiredParameter1 missingRequiredParameter1;

        MissingRequiredParameter1Case(MissingRequiredParameter1 missingRequiredParameter1) {
            this.missingRequiredParameter1 = missingRequiredParameter1;
        }

        @Override
        public <R> R match(Cases<R> cases) {
            return cases.missingRequiredParameter1(this.missingRequiredParameter1);
        }

        @JsonCreator
        private MissingRequiredParameter1Case(JsonNode jsonNode) throws IOException {
            this.missingRequiredParameter1 = ApiHelper.deserialize(jsonNode,
                MissingRequiredParameter1.class);
        }

        @Override
        public String toString() {
            return missingRequiredParameter1.toString();
        }
    }

    /**
     * This is a implementation class for AMOUNTNOTPATCHABLECase.
     */
    @JsonDeserialize(using = JsonDeserializer.None.class)
    @TypeCombinatorCase(type = "AMOUNTNOTPATCHABLE")
    private static class AMOUNTNOTPATCHABLECase extends OrdersPatch400IssuesItems {

        @JsonValue
        private AMOUNTNOTPATCHABLE aMOUNTNOTPATCHABLE;

        AMOUNTNOTPATCHABLECase(AMOUNTNOTPATCHABLE aMOUNTNOTPATCHABLE) {
            this.aMOUNTNOTPATCHABLE = aMOUNTNOTPATCHABLE;
        }

        @Override
        public <R> R match(Cases<R> cases) {
            return cases.aMOUNTNOTPATCHABLE(this.aMOUNTNOTPATCHABLE);
        }

        @JsonCreator
        private AMOUNTNOTPATCHABLECase(JsonNode jsonNode) throws IOException {
            this.aMOUNTNOTPATCHABLE = ApiHelper.deserialize(jsonNode,
                AMOUNTNOTPATCHABLE.class);
        }

        @Override
        public String toString() {
            return aMOUNTNOTPATCHABLE.toString();
        }
    }

    /**
     * This is a implementation class for INVALIDPATCHOPERATIONCase.
     */
    @JsonDeserialize(using = JsonDeserializer.None.class)
    @TypeCombinatorCase(type = "INVALIDPATCHOPERATION")
    private static class INVALIDPATCHOPERATIONCase extends OrdersPatch400IssuesItems {

        @JsonValue
        private INVALIDPATCHOPERATION iNVALIDPATCHOPERATION;

        INVALIDPATCHOPERATIONCase(INVALIDPATCHOPERATION iNVALIDPATCHOPERATION) {
            this.iNVALIDPATCHOPERATION = iNVALIDPATCHOPERATION;
        }

        @Override
        public <R> R match(Cases<R> cases) {
            return cases.iNVALIDPATCHOPERATION(this.iNVALIDPATCHOPERATION);
        }

        @JsonCreator
        private INVALIDPATCHOPERATIONCase(JsonNode jsonNode) throws IOException {
            this.iNVALIDPATCHOPERATION = ApiHelper.deserialize(jsonNode,
                INVALIDPATCHOPERATION.class);
        }

        @Override
        public String toString() {
            return iNVALIDPATCHOPERATION.toString();
        }
    }

    /**
     * This is a implementation class for MalformedRequestJson1Case.
     */
    @JsonDeserialize(using = JsonDeserializer.None.class)
    @TypeCombinatorCase(type = "MalformedRequestJson1")
    private static class MalformedRequestJson1Case extends OrdersPatch400IssuesItems {

        @JsonValue
        private MalformedRequestJson1 malformedRequestJson1;

        MalformedRequestJson1Case(MalformedRequestJson1 malformedRequestJson1) {
            this.malformedRequestJson1 = malformedRequestJson1;
        }

        @Override
        public <R> R match(Cases<R> cases) {
            return cases.malformedRequestJson1(this.malformedRequestJson1);
        }

        @JsonCreator
        private MalformedRequestJson1Case(JsonNode jsonNode) throws IOException {
            this.malformedRequestJson1 = ApiHelper.deserialize(jsonNode,
                MalformedRequestJson1.class);
        }

        @Override
        public String toString() {
            return malformedRequestJson1.toString();
        }
    }

    /**
     * This is a custom deserializer class for OrdersPatch400IssuesItems.
     */
    protected static class OrdersPatch400IssuesItemsDeserializer
            extends JsonDeserializer<OrdersPatch400IssuesItems> {

        @Override
        public OrdersPatch400IssuesItems deserialize(JsonParser jp, DeserializationContext ctxt)
                throws IOException, JsonProcessingException {
            ObjectCodec oc = jp.getCodec();
            JsonNode node = oc.readTree(jp);
            return ApiHelper.deserialize(node, Arrays.asList(FIELDNOTPATCHABLECase.class,
                    InvalidArrayMaximumItemsCase.class, INvalidParameterSyntax1Case.class,
                    InvalidStringLength1Case.class, InvalidParameterValue1Case.class,
                    MissingRequiredParameter1Case.class, AMOUNTNOTPATCHABLECase.class,
                    INVALIDPATCHOPERATIONCase.class, MalformedRequestJson1Case.class), false);
        }
    }

}
