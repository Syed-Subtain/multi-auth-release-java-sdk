/*
 * PaypalMergedAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.paypal.sandbox.apim.models.containers;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fasterxml.jackson.core.JsonParser;
import com.fasterxml.jackson.core.JsonProcessingException;
import com.fasterxml.jackson.core.ObjectCodec;
import com.fasterxml.jackson.databind.DeserializationContext;
import com.fasterxml.jackson.databind.JsonDeserializer;
import com.fasterxml.jackson.databind.JsonNode;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.paypal.sandbox.apim.ApiHelper;
import com.paypal.sandbox.apim.models.CANNOTBENEGATIVE2;
import com.paypal.sandbox.apim.models.CANNOTBEZEROORNEGATIVE;
import com.paypal.sandbox.apim.models.CAPTUREFULLYREFUNDED;
import com.paypal.sandbox.apim.models.CURRENCYMISMATCH;
import com.paypal.sandbox.apim.models.DECIMALPRECISION;
import com.paypal.sandbox.apim.models.DECIMALSNOTSUPPORTED;
import com.paypal.sandbox.apim.models.DUPLICATEINVOICEID1;
import com.paypal.sandbox.apim.models.INVALIDCURRENCYCODE2;
import com.paypal.sandbox.apim.models.MAXNUMBEROFREFUNDSEXCEEDED;
import com.paypal.sandbox.apim.models.PARTIALREFUNDNOTALLOWED;
import com.paypal.sandbox.apim.models.PAYEEACCOUNTLOCKEDORCLOSED2;
import com.paypal.sandbox.apim.models.PAYEEACCOUNTRESTRICTED2;
import com.paypal.sandbox.apim.models.PAYERACCOUNTLOCKEDORCLOSED;
import com.paypal.sandbox.apim.models.PENDINGCAPTURE;
import com.paypal.sandbox.apim.models.PLATFORMFEEEXCEEDED;
import com.paypal.sandbox.apim.models.PLATFORMFEENOTENABLED;
import com.paypal.sandbox.apim.models.REFUNDAMOUNTEXCEEDED;
import com.paypal.sandbox.apim.models.REFUNDAMOUNTTOOLOW;
import com.paypal.sandbox.apim.models.REFUNDCAPTURECURRENCYMISMATCH;
import com.paypal.sandbox.apim.models.REFUNDFAILEDINSUFFICIENTFUNDS;
import com.paypal.sandbox.apim.models.REFUNDISRESTRICTED;
import com.paypal.sandbox.apim.models.REFUNDNOTALLOWED;
import com.paypal.sandbox.apim.models.REFUNDNOTPERMITTEDDUETOCHARGEBACK;
import com.paypal.sandbox.apim.models.REFUNDTIMELIMITEXCEEDED;
import com.paypal.sandbox.apim.models.TRANSACTIONDISPUTED;
import io.apimatic.core.annotations.TypeCombinator.TypeCombinatorCase;
import java.io.IOException;
import java.util.Arrays;

/**
 * This is a container class for any-of types.
 */
@JsonDeserialize(using = Capturesrefund422issuesItems.Capturesrefund422issuesItemsDeserializer.class)
public abstract class Capturesrefund422issuesItems {
    
    /**
     * This is CANNOT_BE_ZERO_OR_NEGATIVE case.
     * @param cANNOTBEZEROORNEGATIVE CANNOTBEZEROORNEGATIVE value for cANNOTBEZEROORNEGATIVE.
     * @return The CANNOTBEZEROORNEGATIVECase object.
     */
    public static Capturesrefund422issuesItems fromCANNOTBEZEROORNEGATIVE(
            CANNOTBEZEROORNEGATIVE cANNOTBEZEROORNEGATIVE) {
        return cANNOTBEZEROORNEGATIVE == null ? null : new CANNOTBEZEROORNEGATIVECase(cANNOTBEZEROORNEGATIVE);
    }

    /**
     * This is DECIMAL_PRECISION case.
     * @param dECIMALPRECISION DECIMALPRECISION value for dECIMALPRECISION.
     * @return The DECIMALPRECISIONCase object.
     */
    public static Capturesrefund422issuesItems fromDECIMALPRECISION(
            DECIMALPRECISION dECIMALPRECISION) {
        return dECIMALPRECISION == null ? null : new DECIMALPRECISIONCase(dECIMALPRECISION);
    }

    /**
     * This is DECIMALS_NOT_SUPPORTED case.
     * @param dECIMALSNOTSUPPORTED DECIMALSNOTSUPPORTED value for dECIMALSNOTSUPPORTED.
     * @return The DECIMALSNOTSUPPORTEDCase object.
     */
    public static Capturesrefund422issuesItems fromDECIMALSNOTSUPPORTED(
            DECIMALSNOTSUPPORTED dECIMALSNOTSUPPORTED) {
        return dECIMALSNOTSUPPORTED == null ? null : new DECIMALSNOTSUPPORTEDCase(dECIMALSNOTSUPPORTED);
    }

    /**
     * This is INVALID_CURRENCY_CODE2 case.
     * @param iNVALIDCURRENCYCODE2 INVALIDCURRENCYCODE2 value for iNVALIDCURRENCYCODE2.
     * @return The INVALIDCURRENCYCODE2Case object.
     */
    public static Capturesrefund422issuesItems fromINVALIDCURRENCYCODE2(
            INVALIDCURRENCYCODE2 iNVALIDCURRENCYCODE2) {
        return iNVALIDCURRENCYCODE2 == null ? null : new INVALIDCURRENCYCODE2Case(iNVALIDCURRENCYCODE2);
    }

    /**
     * This is CURRENCY_MISMATCH case.
     * @param cURRENCYMISMATCH CURRENCYMISMATCH value for cURRENCYMISMATCH.
     * @return The CURRENCYMISMATCHCase object.
     */
    public static Capturesrefund422issuesItems fromCURRENCYMISMATCH(
            CURRENCYMISMATCH cURRENCYMISMATCH) {
        return cURRENCYMISMATCH == null ? null : new CURRENCYMISMATCHCase(cURRENCYMISMATCH);
    }

    /**
     * This is CANNOT_BE_NEGATIVE2 case.
     * @param cANNOTBENEGATIVE2 CANNOTBENEGATIVE2 value for cANNOTBENEGATIVE2.
     * @return The CANNOTBENEGATIVE2Case object.
     */
    public static Capturesrefund422issuesItems fromCANNOTBENEGATIVE2(
            CANNOTBENEGATIVE2 cANNOTBENEGATIVE2) {
        return cANNOTBENEGATIVE2 == null ? null : new CANNOTBENEGATIVE2Case(cANNOTBENEGATIVE2);
    }

    /**
     * This is CAPTURE_FULLY_REFUNDED case.
     * @param cAPTUREFULLYREFUNDED CAPTUREFULLYREFUNDED value for cAPTUREFULLYREFUNDED.
     * @return The CAPTUREFULLYREFUNDEDCase object.
     */
    public static Capturesrefund422issuesItems fromCAPTUREFULLYREFUNDED(
            CAPTUREFULLYREFUNDED cAPTUREFULLYREFUNDED) {
        return cAPTUREFULLYREFUNDED == null ? null : new CAPTUREFULLYREFUNDEDCase(cAPTUREFULLYREFUNDED);
    }

    /**
     * This is REFUND_CAPTURE_CURRENCY_MISMATCH case.
     * @param rEFUNDCAPTURECURRENCYMISMATCH REFUNDCAPTURECURRENCYMISMATCH value for rEFUNDCAPTURECURRENCYMISMATCH.
     * @return The REFUNDCAPTURECURRENCYMISMATCHCase object.
     */
    public static Capturesrefund422issuesItems fromREFUNDCAPTURECURRENCYMISMATCH(
            REFUNDCAPTURECURRENCYMISMATCH rEFUNDCAPTURECURRENCYMISMATCH) {
        return rEFUNDCAPTURECURRENCYMISMATCH == null ? null : new REFUNDCAPTURECURRENCYMISMATCHCase(rEFUNDCAPTURECURRENCYMISMATCH);
    }

    /**
     * This is REFUND_NOT_ALLOWED case.
     * @param rEFUNDNOTALLOWED REFUNDNOTALLOWED value for rEFUNDNOTALLOWED.
     * @return The REFUNDNOTALLOWEDCase object.
     */
    public static Capturesrefund422issuesItems fromREFUNDNOTALLOWED(
            REFUNDNOTALLOWED rEFUNDNOTALLOWED) {
        return rEFUNDNOTALLOWED == null ? null : new REFUNDNOTALLOWEDCase(rEFUNDNOTALLOWED);
    }

    /**
     * This is REFUND_TIME_LIMIT_EXCEEDED case.
     * @param rEFUNDTIMELIMITEXCEEDED REFUNDTIMELIMITEXCEEDED value for rEFUNDTIMELIMITEXCEEDED.
     * @return The REFUNDTIMELIMITEXCEEDEDCase object.
     */
    public static Capturesrefund422issuesItems fromREFUNDTIMELIMITEXCEEDED(
            REFUNDTIMELIMITEXCEEDED rEFUNDTIMELIMITEXCEEDED) {
        return rEFUNDTIMELIMITEXCEEDED == null ? null : new REFUNDTIMELIMITEXCEEDEDCase(rEFUNDTIMELIMITEXCEEDED);
    }

    /**
     * This is REFUND_AMOUNT_EXCEEDED case.
     * @param rEFUNDAMOUNTEXCEEDED REFUNDAMOUNTEXCEEDED value for rEFUNDAMOUNTEXCEEDED.
     * @return The REFUNDAMOUNTEXCEEDEDCase object.
     */
    public static Capturesrefund422issuesItems fromREFUNDAMOUNTEXCEEDED(
            REFUNDAMOUNTEXCEEDED rEFUNDAMOUNTEXCEEDED) {
        return rEFUNDAMOUNTEXCEEDED == null ? null : new REFUNDAMOUNTEXCEEDEDCase(rEFUNDAMOUNTEXCEEDED);
    }

    /**
     * This is REFUND_AMOUNT_TOO_LOW case.
     * @param rEFUNDAMOUNTTOOLOW REFUNDAMOUNTTOOLOW value for rEFUNDAMOUNTTOOLOW.
     * @return The REFUNDAMOUNTTOOLOWCase object.
     */
    public static Capturesrefund422issuesItems fromREFUNDAMOUNTTOOLOW(
            REFUNDAMOUNTTOOLOW rEFUNDAMOUNTTOOLOW) {
        return rEFUNDAMOUNTTOOLOW == null ? null : new REFUNDAMOUNTTOOLOWCase(rEFUNDAMOUNTTOOLOW);
    }

    /**
     * This is REFUND_FAILED_INSUFFICIENT_FUNDS case.
     * @param rEFUNDFAILEDINSUFFICIENTFUNDS REFUNDFAILEDINSUFFICIENTFUNDS value for rEFUNDFAILEDINSUFFICIENTFUNDS.
     * @return The REFUNDFAILEDINSUFFICIENTFUNDSCase object.
     */
    public static Capturesrefund422issuesItems fromREFUNDFAILEDINSUFFICIENTFUNDS(
            REFUNDFAILEDINSUFFICIENTFUNDS rEFUNDFAILEDINSUFFICIENTFUNDS) {
        return rEFUNDFAILEDINSUFFICIENTFUNDS == null ? null : new REFUNDFAILEDINSUFFICIENTFUNDSCase(rEFUNDFAILEDINSUFFICIENTFUNDS);
    }

    /**
     * This is PARTIAL_REFUND_NOT_ALLOWED case.
     * @param pARTIALREFUNDNOTALLOWED PARTIALREFUNDNOTALLOWED value for pARTIALREFUNDNOTALLOWED.
     * @return The PARTIALREFUNDNOTALLOWEDCase object.
     */
    public static Capturesrefund422issuesItems fromPARTIALREFUNDNOTALLOWED(
            PARTIALREFUNDNOTALLOWED pARTIALREFUNDNOTALLOWED) {
        return pARTIALREFUNDNOTALLOWED == null ? null : new PARTIALREFUNDNOTALLOWEDCase(pARTIALREFUNDNOTALLOWED);
    }

    /**
     * This is MAX_NUMBER_OF_REFUNDS_EXCEEDED case.
     * @param mAXNUMBEROFREFUNDSEXCEEDED MAXNUMBEROFREFUNDSEXCEEDED value for mAXNUMBEROFREFUNDSEXCEEDED.
     * @return The MAXNUMBEROFREFUNDSEXCEEDEDCase object.
     */
    public static Capturesrefund422issuesItems fromMAXNUMBEROFREFUNDSEXCEEDED(
            MAXNUMBEROFREFUNDSEXCEEDED mAXNUMBEROFREFUNDSEXCEEDED) {
        return mAXNUMBEROFREFUNDSEXCEEDED == null ? null : new MAXNUMBEROFREFUNDSEXCEEDEDCase(mAXNUMBEROFREFUNDSEXCEEDED);
    }

    /**
     * This is PENDING_CAPTURE case.
     * @param pENDINGCAPTURE PENDINGCAPTURE value for pENDINGCAPTURE.
     * @return The PENDINGCAPTURECase object.
     */
    public static Capturesrefund422issuesItems fromPENDINGCAPTURE(PENDINGCAPTURE pENDINGCAPTURE) {
        return pENDINGCAPTURE == null ? null : new PENDINGCAPTURECase(pENDINGCAPTURE);
    }

    /**
     * This is DUPLICATE_INVOICE_ID1 case.
     * @param dUPLICATEINVOICEID1 DUPLICATEINVOICEID1 value for dUPLICATEINVOICEID1.
     * @return The DUPLICATEINVOICEID1Case object.
     */
    public static Capturesrefund422issuesItems fromDUPLICATEINVOICEID1(
            DUPLICATEINVOICEID1 dUPLICATEINVOICEID1) {
        return dUPLICATEINVOICEID1 == null ? null : new DUPLICATEINVOICEID1Case(dUPLICATEINVOICEID1);
    }

    /**
     * This is PAYEE_ACCOUNT_LOCKED_OR_CLOSED2 case.
     * @param pAYEEACCOUNTLOCKEDORCLOSED2 PAYEEACCOUNTLOCKEDORCLOSED2 value for pAYEEACCOUNTLOCKEDORCLOSED2.
     * @return The PAYEEACCOUNTLOCKEDORCLOSED2Case object.
     */
    public static Capturesrefund422issuesItems fromPAYEEACCOUNTLOCKEDORCLOSED2(
            PAYEEACCOUNTLOCKEDORCLOSED2 pAYEEACCOUNTLOCKEDORCLOSED2) {
        return pAYEEACCOUNTLOCKEDORCLOSED2 == null ? null : new PAYEEACCOUNTLOCKEDORCLOSED2Case(pAYEEACCOUNTLOCKEDORCLOSED2);
    }

    /**
     * This is PAYER_ACCOUNT_LOCKED_OR_CLOSED case.
     * @param pAYERACCOUNTLOCKEDORCLOSED PAYERACCOUNTLOCKEDORCLOSED value for pAYERACCOUNTLOCKEDORCLOSED.
     * @return The PAYERACCOUNTLOCKEDORCLOSEDCase object.
     */
    public static Capturesrefund422issuesItems fromPAYERACCOUNTLOCKEDORCLOSED(
            PAYERACCOUNTLOCKEDORCLOSED pAYERACCOUNTLOCKEDORCLOSED) {
        return pAYERACCOUNTLOCKEDORCLOSED == null ? null : new PAYERACCOUNTLOCKEDORCLOSEDCase(pAYERACCOUNTLOCKEDORCLOSED);
    }

    /**
     * This is PAYEE_ACCOUNT_RESTRICTED2 case.
     * @param pAYEEACCOUNTRESTRICTED2 PAYEEACCOUNTRESTRICTED2 value for pAYEEACCOUNTRESTRICTED2.
     * @return The PAYEEACCOUNTRESTRICTED2Case object.
     */
    public static Capturesrefund422issuesItems fromPAYEEACCOUNTRESTRICTED2(
            PAYEEACCOUNTRESTRICTED2 pAYEEACCOUNTRESTRICTED2) {
        return pAYEEACCOUNTRESTRICTED2 == null ? null : new PAYEEACCOUNTRESTRICTED2Case(pAYEEACCOUNTRESTRICTED2);
    }

    /**
     * This is REFUND_NOT_PERMITTED_DUE_TO_CHARGEBACK case.
     * @param rEFUNDNOTPERMITTEDDUETOCHARGEBACK REFUNDNOTPERMITTEDDUETOCHARGEBACK value for rEFUNDNOTPERMITTEDDUETOCHARGEBACK.
     * @return The REFUNDNOTPERMITTEDDUETOCHARGEBACKCase object.
     */
    public static Capturesrefund422issuesItems fromREFUNDNOTPERMITTEDDUETOCHARGEBACK(
            REFUNDNOTPERMITTEDDUETOCHARGEBACK rEFUNDNOTPERMITTEDDUETOCHARGEBACK) {
        return rEFUNDNOTPERMITTEDDUETOCHARGEBACK == null ? null : new REFUNDNOTPERMITTEDDUETOCHARGEBACKCase(rEFUNDNOTPERMITTEDDUETOCHARGEBACK);
    }

    /**
     * This is TRANSACTION_DISPUTED case.
     * @param tRANSACTIONDISPUTED TRANSACTIONDISPUTED value for tRANSACTIONDISPUTED.
     * @return The TRANSACTIONDISPUTEDCase object.
     */
    public static Capturesrefund422issuesItems fromTRANSACTIONDISPUTED(
            TRANSACTIONDISPUTED tRANSACTIONDISPUTED) {
        return tRANSACTIONDISPUTED == null ? null : new TRANSACTIONDISPUTEDCase(tRANSACTIONDISPUTED);
    }

    /**
     * This is PLATFORM_FEE_EXCEEDED case.
     * @param pLATFORMFEEEXCEEDED PLATFORMFEEEXCEEDED value for pLATFORMFEEEXCEEDED.
     * @return The PLATFORMFEEEXCEEDEDCase object.
     */
    public static Capturesrefund422issuesItems fromPLATFORMFEEEXCEEDED(
            PLATFORMFEEEXCEEDED pLATFORMFEEEXCEEDED) {
        return pLATFORMFEEEXCEEDED == null ? null : new PLATFORMFEEEXCEEDEDCase(pLATFORMFEEEXCEEDED);
    }

    /**
     * This is REFUND_IS_RESTRICTED case.
     * @param rEFUNDISRESTRICTED REFUNDISRESTRICTED value for rEFUNDISRESTRICTED.
     * @return The REFUNDISRESTRICTEDCase object.
     */
    public static Capturesrefund422issuesItems fromREFUNDISRESTRICTED(
            REFUNDISRESTRICTED rEFUNDISRESTRICTED) {
        return rEFUNDISRESTRICTED == null ? null : new REFUNDISRESTRICTEDCase(rEFUNDISRESTRICTED);
    }

    /**
     * This is PLATFORM_FEE_NOT_ENABLED case.
     * @param pLATFORMFEENOTENABLED PLATFORMFEENOTENABLED value for pLATFORMFEENOTENABLED.
     * @return The PLATFORMFEENOTENABLEDCase object.
     */
    public static Capturesrefund422issuesItems fromPLATFORMFEENOTENABLED(
            PLATFORMFEENOTENABLED pLATFORMFEENOTENABLED) {
        return pLATFORMFEENOTENABLED == null ? null : new PLATFORMFEENOTENABLEDCase(pLATFORMFEENOTENABLED);
    }

    /**
     * Method to match from the provided any-of cases.
     * @param <R> The type to return after applying callback.
     * @param cases The any-of type cases callback.
     * @return The any-of matched case.
     */
    public abstract <R> R match(Cases<R> cases);

    /**
     * This is interface for any-of cases.
     * @param <R> The type to return after applying callback.
     */
    public interface Cases<R> {
        R cANNOTBEZEROORNEGATIVE(CANNOTBEZEROORNEGATIVE cANNOTBEZEROORNEGATIVE);

        R dECIMALPRECISION(DECIMALPRECISION dECIMALPRECISION);

        R dECIMALSNOTSUPPORTED(DECIMALSNOTSUPPORTED dECIMALSNOTSUPPORTED);

        R iNVALIDCURRENCYCODE2(INVALIDCURRENCYCODE2 iNVALIDCURRENCYCODE2);

        R cURRENCYMISMATCH(CURRENCYMISMATCH cURRENCYMISMATCH);

        R cANNOTBENEGATIVE2(CANNOTBENEGATIVE2 cANNOTBENEGATIVE2);

        R cAPTUREFULLYREFUNDED(CAPTUREFULLYREFUNDED cAPTUREFULLYREFUNDED);

        R rEFUNDCAPTURECURRENCYMISMATCH(REFUNDCAPTURECURRENCYMISMATCH rEFUNDCAPTURECURRENCYMISMATCH);

        R rEFUNDNOTALLOWED(REFUNDNOTALLOWED rEFUNDNOTALLOWED);

        R rEFUNDTIMELIMITEXCEEDED(REFUNDTIMELIMITEXCEEDED rEFUNDTIMELIMITEXCEEDED);

        R rEFUNDAMOUNTEXCEEDED(REFUNDAMOUNTEXCEEDED rEFUNDAMOUNTEXCEEDED);

        R rEFUNDAMOUNTTOOLOW(REFUNDAMOUNTTOOLOW rEFUNDAMOUNTTOOLOW);

        R rEFUNDFAILEDINSUFFICIENTFUNDS(REFUNDFAILEDINSUFFICIENTFUNDS rEFUNDFAILEDINSUFFICIENTFUNDS);

        R pARTIALREFUNDNOTALLOWED(PARTIALREFUNDNOTALLOWED pARTIALREFUNDNOTALLOWED);

        R mAXNUMBEROFREFUNDSEXCEEDED(MAXNUMBEROFREFUNDSEXCEEDED mAXNUMBEROFREFUNDSEXCEEDED);

        R pENDINGCAPTURE(PENDINGCAPTURE pENDINGCAPTURE);

        R dUPLICATEINVOICEID1(DUPLICATEINVOICEID1 dUPLICATEINVOICEID1);

        R pAYEEACCOUNTLOCKEDORCLOSED2(PAYEEACCOUNTLOCKEDORCLOSED2 pAYEEACCOUNTLOCKEDORCLOSED2);

        R pAYERACCOUNTLOCKEDORCLOSED(PAYERACCOUNTLOCKEDORCLOSED pAYERACCOUNTLOCKEDORCLOSED);

        R pAYEEACCOUNTRESTRICTED2(PAYEEACCOUNTRESTRICTED2 pAYEEACCOUNTRESTRICTED2);

        R rEFUNDNOTPERMITTEDDUETOCHARGEBACK(REFUNDNOTPERMITTEDDUETOCHARGEBACK rEFUNDNOTPERMITTEDDUETOCHARGEBACK);

        R tRANSACTIONDISPUTED(TRANSACTIONDISPUTED tRANSACTIONDISPUTED);

        R pLATFORMFEEEXCEEDED(PLATFORMFEEEXCEEDED pLATFORMFEEEXCEEDED);

        R rEFUNDISRESTRICTED(REFUNDISRESTRICTED rEFUNDISRESTRICTED);

        R pLATFORMFEENOTENABLED(PLATFORMFEENOTENABLED pLATFORMFEENOTENABLED);
    }

    /**
     * This is a implementation class for CANNOTBEZEROORNEGATIVECase.
     */
    @JsonDeserialize(using = JsonDeserializer.None.class)
    @TypeCombinatorCase(type = "CANNOTBEZEROORNEGATIVE")
    private static class CANNOTBEZEROORNEGATIVECase extends Capturesrefund422issuesItems {

        @JsonValue
        private CANNOTBEZEROORNEGATIVE cANNOTBEZEROORNEGATIVE;

        CANNOTBEZEROORNEGATIVECase(CANNOTBEZEROORNEGATIVE cANNOTBEZEROORNEGATIVE) {
            this.cANNOTBEZEROORNEGATIVE = cANNOTBEZEROORNEGATIVE;
        }

        @Override
        public <R> R match(Cases<R> cases) {
            return cases.cANNOTBEZEROORNEGATIVE(this.cANNOTBEZEROORNEGATIVE);
        }

        @JsonCreator
        private CANNOTBEZEROORNEGATIVECase(JsonNode jsonNode) throws IOException {
            this.cANNOTBEZEROORNEGATIVE = ApiHelper.deserialize(jsonNode,
                CANNOTBEZEROORNEGATIVE.class);
        }

        @Override
        public String toString() {
            return cANNOTBEZEROORNEGATIVE.toString();
        }
    }

    /**
     * This is a implementation class for DECIMALPRECISIONCase.
     */
    @JsonDeserialize(using = JsonDeserializer.None.class)
    @TypeCombinatorCase(type = "DECIMALPRECISION")
    private static class DECIMALPRECISIONCase extends Capturesrefund422issuesItems {

        @JsonValue
        private DECIMALPRECISION dECIMALPRECISION;

        DECIMALPRECISIONCase(DECIMALPRECISION dECIMALPRECISION) {
            this.dECIMALPRECISION = dECIMALPRECISION;
        }

        @Override
        public <R> R match(Cases<R> cases) {
            return cases.dECIMALPRECISION(this.dECIMALPRECISION);
        }

        @JsonCreator
        private DECIMALPRECISIONCase(JsonNode jsonNode) throws IOException {
            this.dECIMALPRECISION = ApiHelper.deserialize(jsonNode,
                DECIMALPRECISION.class);
        }

        @Override
        public String toString() {
            return dECIMALPRECISION.toString();
        }
    }

    /**
     * This is a implementation class for DECIMALSNOTSUPPORTEDCase.
     */
    @JsonDeserialize(using = JsonDeserializer.None.class)
    @TypeCombinatorCase(type = "DECIMALSNOTSUPPORTED")
    private static class DECIMALSNOTSUPPORTEDCase extends Capturesrefund422issuesItems {

        @JsonValue
        private DECIMALSNOTSUPPORTED dECIMALSNOTSUPPORTED;

        DECIMALSNOTSUPPORTEDCase(DECIMALSNOTSUPPORTED dECIMALSNOTSUPPORTED) {
            this.dECIMALSNOTSUPPORTED = dECIMALSNOTSUPPORTED;
        }

        @Override
        public <R> R match(Cases<R> cases) {
            return cases.dECIMALSNOTSUPPORTED(this.dECIMALSNOTSUPPORTED);
        }

        @JsonCreator
        private DECIMALSNOTSUPPORTEDCase(JsonNode jsonNode) throws IOException {
            this.dECIMALSNOTSUPPORTED = ApiHelper.deserialize(jsonNode,
                DECIMALSNOTSUPPORTED.class);
        }

        @Override
        public String toString() {
            return dECIMALSNOTSUPPORTED.toString();
        }
    }

    /**
     * This is a implementation class for INVALIDCURRENCYCODE2Case.
     */
    @JsonDeserialize(using = JsonDeserializer.None.class)
    @TypeCombinatorCase(type = "INVALIDCURRENCYCODE2")
    private static class INVALIDCURRENCYCODE2Case extends Capturesrefund422issuesItems {

        @JsonValue
        private INVALIDCURRENCYCODE2 iNVALIDCURRENCYCODE2;

        INVALIDCURRENCYCODE2Case(INVALIDCURRENCYCODE2 iNVALIDCURRENCYCODE2) {
            this.iNVALIDCURRENCYCODE2 = iNVALIDCURRENCYCODE2;
        }

        @Override
        public <R> R match(Cases<R> cases) {
            return cases.iNVALIDCURRENCYCODE2(this.iNVALIDCURRENCYCODE2);
        }

        @JsonCreator
        private INVALIDCURRENCYCODE2Case(JsonNode jsonNode) throws IOException {
            this.iNVALIDCURRENCYCODE2 = ApiHelper.deserialize(jsonNode,
                INVALIDCURRENCYCODE2.class);
        }

        @Override
        public String toString() {
            return iNVALIDCURRENCYCODE2.toString();
        }
    }

    /**
     * This is a implementation class for CURRENCYMISMATCHCase.
     */
    @JsonDeserialize(using = JsonDeserializer.None.class)
    @TypeCombinatorCase(type = "CURRENCYMISMATCH")
    private static class CURRENCYMISMATCHCase extends Capturesrefund422issuesItems {

        @JsonValue
        private CURRENCYMISMATCH cURRENCYMISMATCH;

        CURRENCYMISMATCHCase(CURRENCYMISMATCH cURRENCYMISMATCH) {
            this.cURRENCYMISMATCH = cURRENCYMISMATCH;
        }

        @Override
        public <R> R match(Cases<R> cases) {
            return cases.cURRENCYMISMATCH(this.cURRENCYMISMATCH);
        }

        @JsonCreator
        private CURRENCYMISMATCHCase(JsonNode jsonNode) throws IOException {
            this.cURRENCYMISMATCH = ApiHelper.deserialize(jsonNode,
                CURRENCYMISMATCH.class);
        }

        @Override
        public String toString() {
            return cURRENCYMISMATCH.toString();
        }
    }

    /**
     * This is a implementation class for CANNOTBENEGATIVE2Case.
     */
    @JsonDeserialize(using = JsonDeserializer.None.class)
    @TypeCombinatorCase(type = "CANNOTBENEGATIVE2")
    private static class CANNOTBENEGATIVE2Case extends Capturesrefund422issuesItems {

        @JsonValue
        private CANNOTBENEGATIVE2 cANNOTBENEGATIVE2;

        CANNOTBENEGATIVE2Case(CANNOTBENEGATIVE2 cANNOTBENEGATIVE2) {
            this.cANNOTBENEGATIVE2 = cANNOTBENEGATIVE2;
        }

        @Override
        public <R> R match(Cases<R> cases) {
            return cases.cANNOTBENEGATIVE2(this.cANNOTBENEGATIVE2);
        }

        @JsonCreator
        private CANNOTBENEGATIVE2Case(JsonNode jsonNode) throws IOException {
            this.cANNOTBENEGATIVE2 = ApiHelper.deserialize(jsonNode,
                CANNOTBENEGATIVE2.class);
        }

        @Override
        public String toString() {
            return cANNOTBENEGATIVE2.toString();
        }
    }

    /**
     * This is a implementation class for CAPTUREFULLYREFUNDEDCase.
     */
    @JsonDeserialize(using = JsonDeserializer.None.class)
    @TypeCombinatorCase(type = "CAPTUREFULLYREFUNDED")
    private static class CAPTUREFULLYREFUNDEDCase extends Capturesrefund422issuesItems {

        @JsonValue
        private CAPTUREFULLYREFUNDED cAPTUREFULLYREFUNDED;

        CAPTUREFULLYREFUNDEDCase(CAPTUREFULLYREFUNDED cAPTUREFULLYREFUNDED) {
            this.cAPTUREFULLYREFUNDED = cAPTUREFULLYREFUNDED;
        }

        @Override
        public <R> R match(Cases<R> cases) {
            return cases.cAPTUREFULLYREFUNDED(this.cAPTUREFULLYREFUNDED);
        }

        @JsonCreator
        private CAPTUREFULLYREFUNDEDCase(JsonNode jsonNode) throws IOException {
            this.cAPTUREFULLYREFUNDED = ApiHelper.deserialize(jsonNode,
                CAPTUREFULLYREFUNDED.class);
        }

        @Override
        public String toString() {
            return cAPTUREFULLYREFUNDED.toString();
        }
    }

    /**
     * This is a implementation class for REFUNDCAPTURECURRENCYMISMATCHCase.
     */
    @JsonDeserialize(using = JsonDeserializer.None.class)
    @TypeCombinatorCase(type = "REFUNDCAPTURECURRENCYMISMATCH")
    private static class REFUNDCAPTURECURRENCYMISMATCHCase extends Capturesrefund422issuesItems {

        @JsonValue
        private REFUNDCAPTURECURRENCYMISMATCH rEFUNDCAPTURECURRENCYMISMATCH;

        REFUNDCAPTURECURRENCYMISMATCHCase(REFUNDCAPTURECURRENCYMISMATCH rEFUNDCAPTURECURRENCYMISMATCH) {
            this.rEFUNDCAPTURECURRENCYMISMATCH = rEFUNDCAPTURECURRENCYMISMATCH;
        }

        @Override
        public <R> R match(Cases<R> cases) {
            return cases.rEFUNDCAPTURECURRENCYMISMATCH(this.rEFUNDCAPTURECURRENCYMISMATCH);
        }

        @JsonCreator
        private REFUNDCAPTURECURRENCYMISMATCHCase(JsonNode jsonNode) throws IOException {
            this.rEFUNDCAPTURECURRENCYMISMATCH = ApiHelper.deserialize(jsonNode,
                REFUNDCAPTURECURRENCYMISMATCH.class);
        }

        @Override
        public String toString() {
            return rEFUNDCAPTURECURRENCYMISMATCH.toString();
        }
    }

    /**
     * This is a implementation class for REFUNDNOTALLOWEDCase.
     */
    @JsonDeserialize(using = JsonDeserializer.None.class)
    @TypeCombinatorCase(type = "REFUNDNOTALLOWED")
    private static class REFUNDNOTALLOWEDCase extends Capturesrefund422issuesItems {

        @JsonValue
        private REFUNDNOTALLOWED rEFUNDNOTALLOWED;

        REFUNDNOTALLOWEDCase(REFUNDNOTALLOWED rEFUNDNOTALLOWED) {
            this.rEFUNDNOTALLOWED = rEFUNDNOTALLOWED;
        }

        @Override
        public <R> R match(Cases<R> cases) {
            return cases.rEFUNDNOTALLOWED(this.rEFUNDNOTALLOWED);
        }

        @JsonCreator
        private REFUNDNOTALLOWEDCase(JsonNode jsonNode) throws IOException {
            this.rEFUNDNOTALLOWED = ApiHelper.deserialize(jsonNode,
                REFUNDNOTALLOWED.class);
        }

        @Override
        public String toString() {
            return rEFUNDNOTALLOWED.toString();
        }
    }

    /**
     * This is a implementation class for REFUNDTIMELIMITEXCEEDEDCase.
     */
    @JsonDeserialize(using = JsonDeserializer.None.class)
    @TypeCombinatorCase(type = "REFUNDTIMELIMITEXCEEDED")
    private static class REFUNDTIMELIMITEXCEEDEDCase extends Capturesrefund422issuesItems {

        @JsonValue
        private REFUNDTIMELIMITEXCEEDED rEFUNDTIMELIMITEXCEEDED;

        REFUNDTIMELIMITEXCEEDEDCase(REFUNDTIMELIMITEXCEEDED rEFUNDTIMELIMITEXCEEDED) {
            this.rEFUNDTIMELIMITEXCEEDED = rEFUNDTIMELIMITEXCEEDED;
        }

        @Override
        public <R> R match(Cases<R> cases) {
            return cases.rEFUNDTIMELIMITEXCEEDED(this.rEFUNDTIMELIMITEXCEEDED);
        }

        @JsonCreator
        private REFUNDTIMELIMITEXCEEDEDCase(JsonNode jsonNode) throws IOException {
            this.rEFUNDTIMELIMITEXCEEDED = ApiHelper.deserialize(jsonNode,
                REFUNDTIMELIMITEXCEEDED.class);
        }

        @Override
        public String toString() {
            return rEFUNDTIMELIMITEXCEEDED.toString();
        }
    }

    /**
     * This is a implementation class for REFUNDAMOUNTEXCEEDEDCase.
     */
    @JsonDeserialize(using = JsonDeserializer.None.class)
    @TypeCombinatorCase(type = "REFUNDAMOUNTEXCEEDED")
    private static class REFUNDAMOUNTEXCEEDEDCase extends Capturesrefund422issuesItems {

        @JsonValue
        private REFUNDAMOUNTEXCEEDED rEFUNDAMOUNTEXCEEDED;

        REFUNDAMOUNTEXCEEDEDCase(REFUNDAMOUNTEXCEEDED rEFUNDAMOUNTEXCEEDED) {
            this.rEFUNDAMOUNTEXCEEDED = rEFUNDAMOUNTEXCEEDED;
        }

        @Override
        public <R> R match(Cases<R> cases) {
            return cases.rEFUNDAMOUNTEXCEEDED(this.rEFUNDAMOUNTEXCEEDED);
        }

        @JsonCreator
        private REFUNDAMOUNTEXCEEDEDCase(JsonNode jsonNode) throws IOException {
            this.rEFUNDAMOUNTEXCEEDED = ApiHelper.deserialize(jsonNode,
                REFUNDAMOUNTEXCEEDED.class);
        }

        @Override
        public String toString() {
            return rEFUNDAMOUNTEXCEEDED.toString();
        }
    }

    /**
     * This is a implementation class for REFUNDAMOUNTTOOLOWCase.
     */
    @JsonDeserialize(using = JsonDeserializer.None.class)
    @TypeCombinatorCase(type = "REFUNDAMOUNTTOOLOW")
    private static class REFUNDAMOUNTTOOLOWCase extends Capturesrefund422issuesItems {

        @JsonValue
        private REFUNDAMOUNTTOOLOW rEFUNDAMOUNTTOOLOW;

        REFUNDAMOUNTTOOLOWCase(REFUNDAMOUNTTOOLOW rEFUNDAMOUNTTOOLOW) {
            this.rEFUNDAMOUNTTOOLOW = rEFUNDAMOUNTTOOLOW;
        }

        @Override
        public <R> R match(Cases<R> cases) {
            return cases.rEFUNDAMOUNTTOOLOW(this.rEFUNDAMOUNTTOOLOW);
        }

        @JsonCreator
        private REFUNDAMOUNTTOOLOWCase(JsonNode jsonNode) throws IOException {
            this.rEFUNDAMOUNTTOOLOW = ApiHelper.deserialize(jsonNode,
                REFUNDAMOUNTTOOLOW.class);
        }

        @Override
        public String toString() {
            return rEFUNDAMOUNTTOOLOW.toString();
        }
    }

    /**
     * This is a implementation class for REFUNDFAILEDINSUFFICIENTFUNDSCase.
     */
    @JsonDeserialize(using = JsonDeserializer.None.class)
    @TypeCombinatorCase(type = "REFUNDFAILEDINSUFFICIENTFUNDS")
    private static class REFUNDFAILEDINSUFFICIENTFUNDSCase extends Capturesrefund422issuesItems {

        @JsonValue
        private REFUNDFAILEDINSUFFICIENTFUNDS rEFUNDFAILEDINSUFFICIENTFUNDS;

        REFUNDFAILEDINSUFFICIENTFUNDSCase(REFUNDFAILEDINSUFFICIENTFUNDS rEFUNDFAILEDINSUFFICIENTFUNDS) {
            this.rEFUNDFAILEDINSUFFICIENTFUNDS = rEFUNDFAILEDINSUFFICIENTFUNDS;
        }

        @Override
        public <R> R match(Cases<R> cases) {
            return cases.rEFUNDFAILEDINSUFFICIENTFUNDS(this.rEFUNDFAILEDINSUFFICIENTFUNDS);
        }

        @JsonCreator
        private REFUNDFAILEDINSUFFICIENTFUNDSCase(JsonNode jsonNode) throws IOException {
            this.rEFUNDFAILEDINSUFFICIENTFUNDS = ApiHelper.deserialize(jsonNode,
                REFUNDFAILEDINSUFFICIENTFUNDS.class);
        }

        @Override
        public String toString() {
            return rEFUNDFAILEDINSUFFICIENTFUNDS.toString();
        }
    }

    /**
     * This is a implementation class for PARTIALREFUNDNOTALLOWEDCase.
     */
    @JsonDeserialize(using = JsonDeserializer.None.class)
    @TypeCombinatorCase(type = "PARTIALREFUNDNOTALLOWED")
    private static class PARTIALREFUNDNOTALLOWEDCase extends Capturesrefund422issuesItems {

        @JsonValue
        private PARTIALREFUNDNOTALLOWED pARTIALREFUNDNOTALLOWED;

        PARTIALREFUNDNOTALLOWEDCase(PARTIALREFUNDNOTALLOWED pARTIALREFUNDNOTALLOWED) {
            this.pARTIALREFUNDNOTALLOWED = pARTIALREFUNDNOTALLOWED;
        }

        @Override
        public <R> R match(Cases<R> cases) {
            return cases.pARTIALREFUNDNOTALLOWED(this.pARTIALREFUNDNOTALLOWED);
        }

        @JsonCreator
        private PARTIALREFUNDNOTALLOWEDCase(JsonNode jsonNode) throws IOException {
            this.pARTIALREFUNDNOTALLOWED = ApiHelper.deserialize(jsonNode,
                PARTIALREFUNDNOTALLOWED.class);
        }

        @Override
        public String toString() {
            return pARTIALREFUNDNOTALLOWED.toString();
        }
    }

    /**
     * This is a implementation class for MAXNUMBEROFREFUNDSEXCEEDEDCase.
     */
    @JsonDeserialize(using = JsonDeserializer.None.class)
    @TypeCombinatorCase(type = "MAXNUMBEROFREFUNDSEXCEEDED")
    private static class MAXNUMBEROFREFUNDSEXCEEDEDCase extends Capturesrefund422issuesItems {

        @JsonValue
        private MAXNUMBEROFREFUNDSEXCEEDED mAXNUMBEROFREFUNDSEXCEEDED;

        MAXNUMBEROFREFUNDSEXCEEDEDCase(MAXNUMBEROFREFUNDSEXCEEDED mAXNUMBEROFREFUNDSEXCEEDED) {
            this.mAXNUMBEROFREFUNDSEXCEEDED = mAXNUMBEROFREFUNDSEXCEEDED;
        }

        @Override
        public <R> R match(Cases<R> cases) {
            return cases.mAXNUMBEROFREFUNDSEXCEEDED(this.mAXNUMBEROFREFUNDSEXCEEDED);
        }

        @JsonCreator
        private MAXNUMBEROFREFUNDSEXCEEDEDCase(JsonNode jsonNode) throws IOException {
            this.mAXNUMBEROFREFUNDSEXCEEDED = ApiHelper.deserialize(jsonNode,
                MAXNUMBEROFREFUNDSEXCEEDED.class);
        }

        @Override
        public String toString() {
            return mAXNUMBEROFREFUNDSEXCEEDED.toString();
        }
    }

    /**
     * This is a implementation class for PENDINGCAPTURECase.
     */
    @JsonDeserialize(using = JsonDeserializer.None.class)
    @TypeCombinatorCase(type = "PENDINGCAPTURE")
    private static class PENDINGCAPTURECase extends Capturesrefund422issuesItems {

        @JsonValue
        private PENDINGCAPTURE pENDINGCAPTURE;

        PENDINGCAPTURECase(PENDINGCAPTURE pENDINGCAPTURE) {
            this.pENDINGCAPTURE = pENDINGCAPTURE;
        }

        @Override
        public <R> R match(Cases<R> cases) {
            return cases.pENDINGCAPTURE(this.pENDINGCAPTURE);
        }

        @JsonCreator
        private PENDINGCAPTURECase(JsonNode jsonNode) throws IOException {
            this.pENDINGCAPTURE = ApiHelper.deserialize(jsonNode,
                PENDINGCAPTURE.class);
        }

        @Override
        public String toString() {
            return pENDINGCAPTURE.toString();
        }
    }

    /**
     * This is a implementation class for DUPLICATEINVOICEID1Case.
     */
    @JsonDeserialize(using = JsonDeserializer.None.class)
    @TypeCombinatorCase(type = "DUPLICATEINVOICEID1")
    private static class DUPLICATEINVOICEID1Case extends Capturesrefund422issuesItems {

        @JsonValue
        private DUPLICATEINVOICEID1 dUPLICATEINVOICEID1;

        DUPLICATEINVOICEID1Case(DUPLICATEINVOICEID1 dUPLICATEINVOICEID1) {
            this.dUPLICATEINVOICEID1 = dUPLICATEINVOICEID1;
        }

        @Override
        public <R> R match(Cases<R> cases) {
            return cases.dUPLICATEINVOICEID1(this.dUPLICATEINVOICEID1);
        }

        @JsonCreator
        private DUPLICATEINVOICEID1Case(JsonNode jsonNode) throws IOException {
            this.dUPLICATEINVOICEID1 = ApiHelper.deserialize(jsonNode,
                DUPLICATEINVOICEID1.class);
        }

        @Override
        public String toString() {
            return dUPLICATEINVOICEID1.toString();
        }
    }

    /**
     * This is a implementation class for PAYEEACCOUNTLOCKEDORCLOSED2Case.
     */
    @JsonDeserialize(using = JsonDeserializer.None.class)
    @TypeCombinatorCase(type = "PAYEEACCOUNTLOCKEDORCLOSED2")
    private static class PAYEEACCOUNTLOCKEDORCLOSED2Case extends Capturesrefund422issuesItems {

        @JsonValue
        private PAYEEACCOUNTLOCKEDORCLOSED2 pAYEEACCOUNTLOCKEDORCLOSED2;

        PAYEEACCOUNTLOCKEDORCLOSED2Case(PAYEEACCOUNTLOCKEDORCLOSED2 pAYEEACCOUNTLOCKEDORCLOSED2) {
            this.pAYEEACCOUNTLOCKEDORCLOSED2 = pAYEEACCOUNTLOCKEDORCLOSED2;
        }

        @Override
        public <R> R match(Cases<R> cases) {
            return cases.pAYEEACCOUNTLOCKEDORCLOSED2(this.pAYEEACCOUNTLOCKEDORCLOSED2);
        }

        @JsonCreator
        private PAYEEACCOUNTLOCKEDORCLOSED2Case(JsonNode jsonNode) throws IOException {
            this.pAYEEACCOUNTLOCKEDORCLOSED2 = ApiHelper.deserialize(jsonNode,
                PAYEEACCOUNTLOCKEDORCLOSED2.class);
        }

        @Override
        public String toString() {
            return pAYEEACCOUNTLOCKEDORCLOSED2.toString();
        }
    }

    /**
     * This is a implementation class for PAYERACCOUNTLOCKEDORCLOSEDCase.
     */
    @JsonDeserialize(using = JsonDeserializer.None.class)
    @TypeCombinatorCase(type = "PAYERACCOUNTLOCKEDORCLOSED")
    private static class PAYERACCOUNTLOCKEDORCLOSEDCase extends Capturesrefund422issuesItems {

        @JsonValue
        private PAYERACCOUNTLOCKEDORCLOSED pAYERACCOUNTLOCKEDORCLOSED;

        PAYERACCOUNTLOCKEDORCLOSEDCase(PAYERACCOUNTLOCKEDORCLOSED pAYERACCOUNTLOCKEDORCLOSED) {
            this.pAYERACCOUNTLOCKEDORCLOSED = pAYERACCOUNTLOCKEDORCLOSED;
        }

        @Override
        public <R> R match(Cases<R> cases) {
            return cases.pAYERACCOUNTLOCKEDORCLOSED(this.pAYERACCOUNTLOCKEDORCLOSED);
        }

        @JsonCreator
        private PAYERACCOUNTLOCKEDORCLOSEDCase(JsonNode jsonNode) throws IOException {
            this.pAYERACCOUNTLOCKEDORCLOSED = ApiHelper.deserialize(jsonNode,
                PAYERACCOUNTLOCKEDORCLOSED.class);
        }

        @Override
        public String toString() {
            return pAYERACCOUNTLOCKEDORCLOSED.toString();
        }
    }

    /**
     * This is a implementation class for PAYEEACCOUNTRESTRICTED2Case.
     */
    @JsonDeserialize(using = JsonDeserializer.None.class)
    @TypeCombinatorCase(type = "PAYEEACCOUNTRESTRICTED2")
    private static class PAYEEACCOUNTRESTRICTED2Case extends Capturesrefund422issuesItems {

        @JsonValue
        private PAYEEACCOUNTRESTRICTED2 pAYEEACCOUNTRESTRICTED2;

        PAYEEACCOUNTRESTRICTED2Case(PAYEEACCOUNTRESTRICTED2 pAYEEACCOUNTRESTRICTED2) {
            this.pAYEEACCOUNTRESTRICTED2 = pAYEEACCOUNTRESTRICTED2;
        }

        @Override
        public <R> R match(Cases<R> cases) {
            return cases.pAYEEACCOUNTRESTRICTED2(this.pAYEEACCOUNTRESTRICTED2);
        }

        @JsonCreator
        private PAYEEACCOUNTRESTRICTED2Case(JsonNode jsonNode) throws IOException {
            this.pAYEEACCOUNTRESTRICTED2 = ApiHelper.deserialize(jsonNode,
                PAYEEACCOUNTRESTRICTED2.class);
        }

        @Override
        public String toString() {
            return pAYEEACCOUNTRESTRICTED2.toString();
        }
    }

    /**
     * This is a implementation class for REFUNDNOTPERMITTEDDUETOCHARGEBACKCase.
     */
    @JsonDeserialize(using = JsonDeserializer.None.class)
    @TypeCombinatorCase(type = "REFUNDNOTPERMITTEDDUETOCHARGEBACK")
    private static class REFUNDNOTPERMITTEDDUETOCHARGEBACKCase extends Capturesrefund422issuesItems {

        @JsonValue
        private REFUNDNOTPERMITTEDDUETOCHARGEBACK rEFUNDNOTPERMITTEDDUETOCHARGEBACK;

        REFUNDNOTPERMITTEDDUETOCHARGEBACKCase(REFUNDNOTPERMITTEDDUETOCHARGEBACK rEFUNDNOTPERMITTEDDUETOCHARGEBACK) {
            this.rEFUNDNOTPERMITTEDDUETOCHARGEBACK = rEFUNDNOTPERMITTEDDUETOCHARGEBACK;
        }

        @Override
        public <R> R match(Cases<R> cases) {
            return cases.rEFUNDNOTPERMITTEDDUETOCHARGEBACK(this.rEFUNDNOTPERMITTEDDUETOCHARGEBACK);
        }

        @JsonCreator
        private REFUNDNOTPERMITTEDDUETOCHARGEBACKCase(JsonNode jsonNode) throws IOException {
            this.rEFUNDNOTPERMITTEDDUETOCHARGEBACK = ApiHelper.deserialize(jsonNode,
                REFUNDNOTPERMITTEDDUETOCHARGEBACK.class);
        }

        @Override
        public String toString() {
            return rEFUNDNOTPERMITTEDDUETOCHARGEBACK.toString();
        }
    }

    /**
     * This is a implementation class for TRANSACTIONDISPUTEDCase.
     */
    @JsonDeserialize(using = JsonDeserializer.None.class)
    @TypeCombinatorCase(type = "TRANSACTIONDISPUTED")
    private static class TRANSACTIONDISPUTEDCase extends Capturesrefund422issuesItems {

        @JsonValue
        private TRANSACTIONDISPUTED tRANSACTIONDISPUTED;

        TRANSACTIONDISPUTEDCase(TRANSACTIONDISPUTED tRANSACTIONDISPUTED) {
            this.tRANSACTIONDISPUTED = tRANSACTIONDISPUTED;
        }

        @Override
        public <R> R match(Cases<R> cases) {
            return cases.tRANSACTIONDISPUTED(this.tRANSACTIONDISPUTED);
        }

        @JsonCreator
        private TRANSACTIONDISPUTEDCase(JsonNode jsonNode) throws IOException {
            this.tRANSACTIONDISPUTED = ApiHelper.deserialize(jsonNode,
                TRANSACTIONDISPUTED.class);
        }

        @Override
        public String toString() {
            return tRANSACTIONDISPUTED.toString();
        }
    }

    /**
     * This is a implementation class for PLATFORMFEEEXCEEDEDCase.
     */
    @JsonDeserialize(using = JsonDeserializer.None.class)
    @TypeCombinatorCase(type = "PLATFORMFEEEXCEEDED")
    private static class PLATFORMFEEEXCEEDEDCase extends Capturesrefund422issuesItems {

        @JsonValue
        private PLATFORMFEEEXCEEDED pLATFORMFEEEXCEEDED;

        PLATFORMFEEEXCEEDEDCase(PLATFORMFEEEXCEEDED pLATFORMFEEEXCEEDED) {
            this.pLATFORMFEEEXCEEDED = pLATFORMFEEEXCEEDED;
        }

        @Override
        public <R> R match(Cases<R> cases) {
            return cases.pLATFORMFEEEXCEEDED(this.pLATFORMFEEEXCEEDED);
        }

        @JsonCreator
        private PLATFORMFEEEXCEEDEDCase(JsonNode jsonNode) throws IOException {
            this.pLATFORMFEEEXCEEDED = ApiHelper.deserialize(jsonNode,
                PLATFORMFEEEXCEEDED.class);
        }

        @Override
        public String toString() {
            return pLATFORMFEEEXCEEDED.toString();
        }
    }

    /**
     * This is a implementation class for REFUNDISRESTRICTEDCase.
     */
    @JsonDeserialize(using = JsonDeserializer.None.class)
    @TypeCombinatorCase(type = "REFUNDISRESTRICTED")
    private static class REFUNDISRESTRICTEDCase extends Capturesrefund422issuesItems {

        @JsonValue
        private REFUNDISRESTRICTED rEFUNDISRESTRICTED;

        REFUNDISRESTRICTEDCase(REFUNDISRESTRICTED rEFUNDISRESTRICTED) {
            this.rEFUNDISRESTRICTED = rEFUNDISRESTRICTED;
        }

        @Override
        public <R> R match(Cases<R> cases) {
            return cases.rEFUNDISRESTRICTED(this.rEFUNDISRESTRICTED);
        }

        @JsonCreator
        private REFUNDISRESTRICTEDCase(JsonNode jsonNode) throws IOException {
            this.rEFUNDISRESTRICTED = ApiHelper.deserialize(jsonNode,
                REFUNDISRESTRICTED.class);
        }

        @Override
        public String toString() {
            return rEFUNDISRESTRICTED.toString();
        }
    }

    /**
     * This is a implementation class for PLATFORMFEENOTENABLEDCase.
     */
    @JsonDeserialize(using = JsonDeserializer.None.class)
    @TypeCombinatorCase(type = "PLATFORMFEENOTENABLED")
    private static class PLATFORMFEENOTENABLEDCase extends Capturesrefund422issuesItems {

        @JsonValue
        private PLATFORMFEENOTENABLED pLATFORMFEENOTENABLED;

        PLATFORMFEENOTENABLEDCase(PLATFORMFEENOTENABLED pLATFORMFEENOTENABLED) {
            this.pLATFORMFEENOTENABLED = pLATFORMFEENOTENABLED;
        }

        @Override
        public <R> R match(Cases<R> cases) {
            return cases.pLATFORMFEENOTENABLED(this.pLATFORMFEENOTENABLED);
        }

        @JsonCreator
        private PLATFORMFEENOTENABLEDCase(JsonNode jsonNode) throws IOException {
            this.pLATFORMFEENOTENABLED = ApiHelper.deserialize(jsonNode,
                PLATFORMFEENOTENABLED.class);
        }

        @Override
        public String toString() {
            return pLATFORMFEENOTENABLED.toString();
        }
    }

    /**
     * This is a custom deserializer class for Capturesrefund422issuesItems.
     */
    protected static class Capturesrefund422issuesItemsDeserializer
            extends JsonDeserializer<Capturesrefund422issuesItems> {

        @Override
        public Capturesrefund422issuesItems deserialize(JsonParser jp, DeserializationContext ctxt)
                throws IOException, JsonProcessingException {
            ObjectCodec oc = jp.getCodec();
            JsonNode node = oc.readTree(jp);
            return ApiHelper.deserialize(node, Arrays.asList(CANNOTBEZEROORNEGATIVECase.class,
                    DECIMALPRECISIONCase.class, DECIMALSNOTSUPPORTEDCase.class,
                    INVALIDCURRENCYCODE2Case.class, CURRENCYMISMATCHCase.class,
                    CANNOTBENEGATIVE2Case.class, CAPTUREFULLYREFUNDEDCase.class,
                    REFUNDCAPTURECURRENCYMISMATCHCase.class, REFUNDNOTALLOWEDCase.class,
                    REFUNDTIMELIMITEXCEEDEDCase.class, REFUNDAMOUNTEXCEEDEDCase.class,
                    REFUNDAMOUNTTOOLOWCase.class, REFUNDFAILEDINSUFFICIENTFUNDSCase.class,
                    PARTIALREFUNDNOTALLOWEDCase.class, MAXNUMBEROFREFUNDSEXCEEDEDCase.class,
                    PENDINGCAPTURECase.class, DUPLICATEINVOICEID1Case.class,
                    PAYEEACCOUNTLOCKEDORCLOSED2Case.class, PAYERACCOUNTLOCKEDORCLOSEDCase.class,
                    PAYEEACCOUNTRESTRICTED2Case.class, REFUNDNOTPERMITTEDDUETOCHARGEBACKCase.class,
                    TRANSACTIONDISPUTEDCase.class, PLATFORMFEEEXCEEDEDCase.class,
                    REFUNDISRESTRICTEDCase.class, PLATFORMFEENOTENABLEDCase.class), false);
        }
    }

}
